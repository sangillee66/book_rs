[
  {
    "objectID": "2_3_radar_lidar.html",
    "href": "2_3_radar_lidar.html",
    "title": "\n6  레이더와 라이다 시스템\n",
    "section": "",
    "text": "6.1 LiDAR 데이터 분석\n필수적인 패키지를 설치한다.\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(tmap)\nlibrary(RStoolbox)\nlibrary(lidR)\nlibrary(raster)\nlibrary(rayshader)\n수업의 특강에서 이하은이 수집한 las 파일을 불러온다.\nlas &lt;- readLAS(\"D:/My R/Raster Data Manipulation Korea/lidar_data/snu_lidar/lidars/terra_las/cloud850fccd1a896259f.las\")\nlas_check(las)\n시각화한다.\nplot(las, color = \"ScanAngleRank\", bg = \"white\", axis = TRUE, legend = TRUE)\n그라운드(ground) 포인트를 추출한다.\nlas &lt;- readLAS(\"D:/My R/Raster Data Manipulation Korea/lidar_data/snu_lidar/lidars/terra_las/cloud850fccd1a896259f.las\", select = \"xyzrn\")\nlas &lt;- classify_ground(las, algorithm = pmf(ws = 5, th = 3))\nDTM을 생성한다.\ndtm_idw &lt;- rasterize_terrain(las, algorithm = knnidw(k = 10L, p = 2))\nplot_dtm3d(dtm_idw, bg = \"white\")\nDTM을 시각화한다.\ndtm_prod &lt;- terrain(dtm_idw, v = c(\"slope\", \"aspect\"), unit = \"radians\")\ndtm_hillshade &lt;- shade(slope = dtm_prod$slope, aspect = dtm_prod$aspect)\nterra::plot(dtm_hillshade, col = gray(0:30/30), legend = FALSE)\n\n\n\n\n\n\n\nError in add_more(fun, y): could not find function \"add_more\"\nrayshader 패키지를 활용하여 시각화한다.\ndtm &lt;- rasterize_terrain(las, algorithm = tin())\ndtm &lt;- raster(dtm)\nelmat &lt;- raster_to_matrix(dtm)\nmap &lt;- elmat |&gt; \n  sphere_shade(texture = \"imhof1\", progbar = FALSE) |&gt; \n  add_water(detect_water(elmat), color = \"imhof1\") |&gt;\n  add_shadow(ray_shade(elmat, progbar = FALSE), 0.5) |&gt;\n  add_shadow(ambient_shade(elmat, progbar = FALSE), 0)\n2D 플롯을 생성한다.\nplot_map(map)\n3D 플롯을 생성한다.\nplot_3d(map, elmat, zscale = 1, windowsize = c(800, 800))",
    "crumbs": [
      "RS 데이터의 획득",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>레이더와 라이다 시스템</span>"
    ]
  },
  {
    "objectID": "4_2_image_composite.html",
    "href": "4_2_image_composite.html",
    "title": "\n13  영상 합성\n",
    "section": "",
    "text": "13.1 고해상도 컬러 영상 합성\n필수적인 패키지를 설치한다.\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tmap)\nlibrary(terra)\nlibrary(RStoolbox)\n서울의 행정구역 바운더리 파일을 불러온다.\nseoul &lt;- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\")\nseoul_gu &lt;- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\")\nseoul_dong &lt;- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp\")\nLevel-1 데이터를 불러와 마스킹한다.\nlevel1_landsat_seoul_st_30 &lt;- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/level1_landsat_seoul_stack_30_2024.tif\")\nlevel1_landsat_seoul_st_30_mask &lt;- level1_landsat_seoul_st_30 |&gt; \n  mask(seoul)\nlevel1_landsat_seoul_st_15 &lt;- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/level1_landsat_seoul_stack_15_2024.tif\")\nlevel1_landsat_seoul_st_15_mask &lt;- level1_landsat_seoul_st_15 |&gt; \n  mask(seoul)\n대비확장을 시행한다.\nlevel1_landsat_seoul_st_30_mask_str &lt;- level1_landsat_seoul_st_30_mask |&gt; \n  stretch(minv = 0, maxv = 255, minq = 0.05, maxq = 0.95)\nlevel1_landsat_seoul_st_15_mask_str &lt;- level1_landsat_seoul_st_15_mask |&gt; \n  stretch(minv = 0, maxv = 255, minq = 0.05, maxq = 0.95)\npanchrom &lt;- level1_landsat_seoul_st_15_mask_str\n기본적인 천연컬러 영상을 생성한다.\nmy_map &lt;- tm_shape(level1_landsat_seoul_st_30_mask_str, \n                   raster.downsample = FALSE) + \n  tm_rgb(r = 4, g = 3, b = 2, legend.show = FALSE) +\n  tm_shape(seoul) + tm_borders(lwd = 2, col = \"gray20\") +\n  tm_layout(frame = TRUE, title = \"Natural Color\", \n            title.size = 2, title.position = c(\"left\", \"top\"), \n            bg.color = \"white\", \n            inner.margins = c(0.05, 0.05, 0.05, 0.05)) +\n  tm_scale_bar(color.dark = \"gray60\", position = c(0.01, 0.01), \n               text.size = 0.6, breaks = seq(0, 20, 5)) + \n  tm_credits(\"SANG-IL LEE, Geography Education at SNU, 2025\", \n             size = 0.7)\nmy_map",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>영상 합성</span>"
    ]
  },
  {
    "objectID": "4_2_image_composite.html#고해상도-컬러-영상-합성",
    "href": "4_2_image_composite.html#고해상도-컬러-영상-합성",
    "title": "\n13  영상 합성\n",
    "section": "",
    "text": "13.1.1 RGB-IHS 변환\nRStoolbox 패키지의 panSharpen() 함수를 이용하여 RGB-IHS 변환을 시행한다.\n\npanchrom &lt;- level1_landsat_seoul_st_15_mask_str\npan_ihs &lt;- panSharpen(\n  level1_landsat_seoul_st_30_mask_str, \n  panchrom, \n  r = 4, g = 3, b = 2,\n  method = \"ihs\"\n)\n\n변환의 결과를 지도로 나타낸다.\n\nmy_map &lt;- tm_shape(pan_ihs, \n                   raster.downsample = FALSE) + \n  tm_rgb(r = 3, g = 2, b = 1, legend.show = FALSE) +\n  tm_shape(seoul) + tm_borders(lwd = 2, col = \"gray20\") +\n  tm_layout(frame = TRUE, title = \"RGB-IHS Transformation\", \n            title.size = 2, title.position = c(\"left\", \"top\"), \n            bg.color = \"white\", \n            inner.margins = c(0.05, 0.05, 0.05, 0.05)) +\n  tm_scale_bar(color.dark = \"gray60\", position = c(0.01, 0.01), \n               text.size = 0.6, breaks = seq(0, 20, 5)) + \n  tm_credits(\"SANG-IL LEE, Geography Education at SNU, 2025\", \n             size = 0.7)\nmy_map\n\n\n13.1.2 브로비(Brovey) 변환\n브로비 변환을 실시한다.\n\npan_brovey &lt;- panSharpen(\n  level1_landsat_seoul_st_30_mask_str, \n  panchrom, \n  r = 4, g = 3, b = 2,\n  method = \"brovey\"\n)\n\n변환의 결과를 지도로 나타낸다.\n\nmy_map &lt;- tm_shape(pan_brovey, \n                   raster.downsample = FALSE) + \n  tm_rgb(r = 3, g = 2, b = 1, legend.show = FALSE) +\n  tm_shape(seoul) + tm_borders(lwd = 2, col = \"gray20\") +\n  tm_layout(frame = TRUE, title = \"Brovey Transformation\", \n            title.size = 2, title.position = c(\"left\", \"top\"), \n            bg.color = \"white\", \n            inner.margins = c(0.05, 0.05, 0.05, 0.05)) +\n  tm_scale_bar(color.dark = \"gray60\", position = c(0.01, 0.01), \n               text.size = 0.6, breaks = seq(0, 20, 5)) + \n  tm_credits(\"SANG-IL LEE, Geography Education at SNU, 2025\", \n             size = 0.7)\nmy_map\n\n\n13.1.3 PCA 변환\nPCA 변환을 실시한다.\n\npan_pca &lt;- panSharpen(\n  level1_landsat_seoul_st_30_mask_str, \n  panchrom, \n  method = \"pca\"\n)\n\n변환의 결과를 지도로 나타낸다.\n\nmy_map &lt;- tm_shape(pan_pca, \n                   raster.downsample = FALSE) + \n  tm_rgb(r = 4, g = 3, b = 2, legend.show = FALSE) +\n  tm_shape(seoul) + tm_borders(lwd = 2, col = \"gray20\") +\n  tm_layout(frame = TRUE, title = \"PCA Transformation\", \n            title.size = 2, title.position = c(\"left\", \"top\"), \n            bg.color = \"white\", \n            inner.margins = c(0.05, 0.05, 0.05, 0.05)) +\n  tm_scale_bar(color.dark = \"gray60\", position = c(0.01, 0.01), \n               text.size = 0.6, breaks = seq(0, 20, 5)) + \n  tm_credits(\"SANG-IL LEE, Geography Education at SNU, 2025\", \n             size = 0.7)\nmy_map",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>영상 합성</span>"
    ]
  },
  {
    "objectID": "4_2_image_composite.html#시계열-영상-합성",
    "href": "4_2_image_composite.html#시계열-영상-합성",
    "title": "\n13  영상 합성\n",
    "section": "\n13.2 시계열 영상 합성",
    "text": "13.2 시계열 영상 합성",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>영상 합성</span>"
    ]
  },
  {
    "objectID": "4_2_image_composite.html#이종-센서-데이터의-융합",
    "href": "4_2_image_composite.html#이종-센서-데이터의-융합",
    "title": "\n13  영상 합성\n",
    "section": "\n13.3 이종 센서 데이터의 융합",
    "text": "13.3 이종 센서 데이터의 융합",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>영상 합성</span>"
    ]
  },
  {
    "objectID": "4_3_image_classification.html",
    "href": "4_3_image_classification.html",
    "title": "\n14  영상 분류\n",
    "section": "",
    "text": "14.1 개요\n필수적인 패키지를 불러온다.\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(tmap)\nlibrary(RStoolbox)\n# library(randomForest)\n# library(kernlab)\n# library(RSNNS)\n# library(C50)\n예제 데이터를 불러온다.\ntrain &lt;- readRDS(system.file(\"external/trainingPolygons_lsat.rds\", package=\"RStoolbox\"))\nlsat_str &lt;- lsat |&gt; \n  stretch(minv = 0, maxv = 255, minq = 0.05, maxq = 0.95)\n\nmy_map &lt;- tm_shape(lsat_str) + tm_rgb(r = 3, g =2, b =1) +\n  tm_layout(legend.outside = TRUE)\nmy_map",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>영상 분류</span>"
    ]
  },
  {
    "objectID": "4_3_image_classification.html#감독-분류",
    "href": "4_3_image_classification.html#감독-분류",
    "title": "\n14  영상 분류\n",
    "section": "\n14.2 감독 분류",
    "text": "14.2 감독 분류\n훈련 데이터를 불러온다.\n\nmy_map &lt;- tm_shape(lsat_str) + \n  tm_rgb(r = 3, g =2, b =1) +\n  tm_shape(train) + \n  tm_polygons(col = \"class\", \n              palette = c(\"yellow\", \"sandybrown\", \"darkgreen\", \"blue\")) +\n  tm_layout(legend.outside = TRUE)\nmy_map\n\n\n\n\n\n\n\n최대 우도(maximum likelihood) 분류 알고리즘을 적용하여 감독 분류를 실행한다.\n\nsc_mlc &lt;- superClass(\n  lsat, \n  trainData = train, \n  responseCol = \"class\",\n  model = \"mlc\", \n  tuneLength = 1, trainPartition = 0.7\n  )\n\nsc_mlc$modelFit\n\n[[1]]\n  TrainAccuracy TrainKappa method\n1     0.9956484   0.992674 custom\n\n[[2]]\nCross-Validated (5 fold) Confusion Matrix \n\n(entries are average cell counts across resamples)\n \n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared       97.4        0.0    1.4   0.0\n  fallen_dry     0.0       14.6    0.2   0.2\n  forest         0.2        0.0  261.4   0.0\n  water          0.0        0.0    0.0  84.2\n                            \n Accuracy (average) : 0.9956\n\nsc_mlc$validation$performance\n\nConfusion Matrix and Statistics\n\n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared        446          0      3     0\n  fallen_dry       0         51      0     0\n  forest           0          0    513     0\n  water            0          0      0   178\n\nOverall Statistics\n                                          \n               Accuracy : 0.9975          \n                 95% CI : (0.9927, 0.9995)\n    No Information Rate : 0.4332          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.9961          \n                                          \n Mcnemar's Test P-Value : NA              \n\nStatistics by Class:\n\n                     Class: cleared Class: fallen_dry Class: forest\nSensitivity                  1.0000           1.00000        0.9942\nSpecificity                  0.9960           1.00000        1.0000\nPos Pred Value               0.9933           1.00000        1.0000\nNeg Pred Value               1.0000           1.00000        0.9956\nPrevalence                   0.3745           0.04282        0.4332\nDetection Rate               0.3745           0.04282        0.4307\nDetection Prevalence         0.3770           0.04282        0.4307\nBalanced Accuracy            0.9980           1.00000        0.9971\n                     Class: water\nSensitivity                1.0000\nSpecificity                1.0000\nPos Pred Value             1.0000\nNeg Pred Value             1.0000\nPrevalence                 0.1495\nDetection Rate             0.1495\nDetection Prevalence       0.1495\nBalanced Accuracy          1.0000\n\n\n결과를 지도를 제작한다.\n\nr &lt;- as.factor(sc_mlc$map)\nlevels(r) &lt;- data.frame(ID = 1:4, class_supervised = levels(train$class))\n\ntm_shape(r) + tm_raster(\n  palette = c(\"yellow\", \"sandybrown\", \"darkgreen\", \"blue\"), \n  title = \"Supervised: \\n Maximum Likelihood\") +\n  tm_layout(legend.outside = TRUE)",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>영상 분류</span>"
    ]
  },
  {
    "objectID": "4_3_image_classification.html#무감독-분류",
    "href": "4_3_image_classification.html#무감독-분류",
    "title": "\n14  영상 분류\n",
    "section": "\n14.3 무감독 분류",
    "text": "14.3 무감독 분류\nk-평균 분류법을 적용한다. 우선 클래스의 개수를 3개로 한 무감독 분류를 실행한다.\n\nuc &lt;- unsuperClass(lsat, nClasses = 3)\nuc_r &lt;- as.factor(uc$map)\ntm_shape(uc_r) + \n  tm_raster(palette = \"Set1\", title = \"Classes\") +\n  tm_layout(legend.outside = TRUE, \n            title = \"K-Means Clustering: \\n3 Classes\")\n\n\n\n\n\n\n\n클래스 개수를 4개로 한다.\n\nuc &lt;- unsuperClass(lsat, nClasses = 4)\nuc_r &lt;- as.factor(uc$map)\ntm_shape(uc_r) + tm_raster(palette = \"Set1\", title = \"Classes\") +\n  tm_layout(legend.outside = TRUE, title = \"K-Means Clustering: \\n4 Classes\")\n\n\n\n\n\n\n\n클래스 개수를 5개로 한다.\n\nuc &lt;- unsuperClass(lsat, nClasses = 5)\nuc_r &lt;- as.factor(uc$map)\ntm_shape(uc_r) + tm_raster(palette = \"Set1\", title = \"Classes\") +\n  tm_layout(\n    legend.outside = TRUE, \n    title = \"K-Means Clustering: \\n5 Classes\")",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>영상 분류</span>"
    ]
  },
  {
    "objectID": "4_3_image_classification.html#혼합-분류",
    "href": "4_3_image_classification.html#혼합-분류",
    "title": "\n14  영상 분류\n",
    "section": "\n14.4 혼합 분류",
    "text": "14.4 혼합 분류",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>영상 분류</span>"
    ]
  },
  {
    "objectID": "4_3_image_classification.html#분광혼합분석",
    "href": "4_3_image_classification.html#분광혼합분석",
    "title": "\n14  영상 분류\n",
    "section": "\n14.5 분광혼합분석",
    "text": "14.5 분광혼합분석\nRStoolbox 패키지의 mesma() 함수를 활용하면 spectral unmixing이 가능하다.",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>영상 분류</span>"
    ]
  },
  {
    "objectID": "4_3_image_classification.html#객체-기반-분류",
    "href": "4_3_image_classification.html#객체-기반-분류",
    "title": "\n14  영상 분류\n",
    "section": "\n14.6 객체-기반 분류",
    "text": "14.6 객체-기반 분류",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>영상 분류</span>"
    ]
  },
  {
    "objectID": "4_3_image_classification.html#인공지능-기반-분류",
    "href": "4_3_image_classification.html#인공지능-기반-분류",
    "title": "\n14  영상 분류\n",
    "section": "\n14.7 인공지능-기반 분류",
    "text": "14.7 인공지능-기반 분류\n인공지능-기반 분류법은 모두 감독 분류이기 때문에 위의 최대 우도법과 마찬가지로 훈련 데이터가 필요하다.\n\n14.7.1 결정 트리(decision tree)\n결정 트리 알고리즘을 적용한다.\n\nsc_dt &lt;- superClass(\n  lsat, \n  trainData = train, \n  responseCol = \"class\",\n  model = \"C5.0\", \n  tuneLength = 1, \n  trainPartition = 0.7)\n\nsc_dt$modelFit\n\n[[1]]\n  TrainAccuracy TrainKappa method\n1     0.9971528  0.9954528   C5.0\n\n[[2]]\nCross-Validated (5 fold) Confusion Matrix \n\n(entries are average cell counts across resamples)\n \n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared      126.2        0.0    0.4   0.0\n  fallen_dry     0.4       16.6    0.0   0.2\n  forest         0.4        0.0  255.8   0.0\n  water          0.0        0.0    0.0  91.4\n                            \n Accuracy (average) : 0.9972\n\nsc_dt$validation$performance\n\nConfusion Matrix and Statistics\n\n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared        295          0      3     0\n  fallen_dry       2         41      0     0\n  forest           2          0    375     0\n  water            0          0      0   142\n\nOverall Statistics\n                                          \n               Accuracy : 0.9919          \n                 95% CI : (0.9833, 0.9967)\n    No Information Rate : 0.4395          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.9876          \n                                          \n Mcnemar's Test P-Value : NA              \n\nStatistics by Class:\n\n                     Class: cleared Class: fallen_dry Class: forest\nSensitivity                  0.9866           1.00000        0.9921\nSpecificity                  0.9947           0.99756        0.9959\nPos Pred Value               0.9899           0.95349        0.9947\nNeg Pred Value               0.9929           1.00000        0.9938\nPrevalence                   0.3477           0.04767        0.4395\nDetection Rate               0.3430           0.04767        0.4360\nDetection Prevalence         0.3465           0.05000        0.4384\nBalanced Accuracy            0.9906           0.99878        0.9940\n                     Class: water\nSensitivity                1.0000\nSpecificity                1.0000\nPos Pred Value             1.0000\nNeg Pred Value             1.0000\nPrevalence                 0.1651\nDetection Rate             0.1651\nDetection Prevalence       0.1651\nBalanced Accuracy          1.0000\n\n\n분류 결과를 지도로 나타낸다.\n\nr &lt;- as.factor(sc_dt$map)\nlevels(r) &lt;- data.frame(ID = 1:4, class_supervised = levels(train$class))\n\ntm_shape(r) + tm_raster(\n  palette = c(\"yellow\", \"sandybrown\", \"darkgreen\", \"blue\"),\n  title = \"Classes\") +\n  tm_layout(\n    legend.outside = TRUE, \n    title = \"AI-based Classification: \\nDecision Tree\")\n\n\n\n\n\n\n\n\n14.7.2 랜덤 포레스트(random forest)\n랜덤 포레스트 알고리즘을 적용한다.\n\nsc_rf &lt;- superClass(\n  lsat, \n  trainData = train, \n  responseCol = \"class\",\n  model = \"rf\", \n  tuneLength = 1, \n  trainPartition = 0.7)\n\nsc_rf$modelFit\n\n[[1]]\n  TrainAccuracy TrainKappa method\n1     0.9979279  0.9966294     rf\n\n[[2]]\nCross-Validated (5 fold) Confusion Matrix \n\n(entries are average cell counts across resamples)\n \n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared      117.0        0.0    0.0   0.0\n  fallen_dry     0.2       19.2    0.0   0.0\n  forest         0.8        0.0  261.2   0.0\n  water          0.0        0.0    0.0  84.4\n                            \n Accuracy (average) : 0.9979\n\nsc_rf$validation$performance\n\nConfusion Matrix and Statistics\n\n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared        342          0      0     0\n  fallen_dry       0         28      0     0\n  forest           2          0    434     0\n  water            0          0      0   178\n\nOverall Statistics\n                                          \n               Accuracy : 0.998           \n                 95% CI : (0.9927, 0.9998)\n    No Information Rate : 0.4411          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.9969          \n                                          \n Mcnemar's Test P-Value : NA              \n\nStatistics by Class:\n\n                     Class: cleared Class: fallen_dry Class: forest\nSensitivity                  0.9942           1.00000        1.0000\nSpecificity                  1.0000           1.00000        0.9964\nPos Pred Value               1.0000           1.00000        0.9954\nNeg Pred Value               0.9969           1.00000        1.0000\nPrevalence                   0.3496           0.02846        0.4411\nDetection Rate               0.3476           0.02846        0.4411\nDetection Prevalence         0.3476           0.02846        0.4431\nBalanced Accuracy            0.9971           1.00000        0.9982\n                     Class: water\nSensitivity                1.0000\nSpecificity                1.0000\nPos Pred Value             1.0000\nNeg Pred Value             1.0000\nPrevalence                 0.1809\nDetection Rate             0.1809\nDetection Prevalence       0.1809\nBalanced Accuracy          1.0000\n\n\n분류 결과를 지도로 나타낸다.\n\nr &lt;- as.factor(sc_rf$map)\nlevels(r) &lt;- data.frame(ID = 1:4, class_supervised = levels(train$class))\n\ntm_shape(r) + tm_raster(\n  palette = c(\"yellow\", \"sandybrown\", \"darkgreen\", \"blue\"),\n  title = \"Classes\") +\n  tm_layout(\n    legend.outside = TRUE, \n    title = \"AI-based Classification: \\n Random Forest\")\n\n\n\n\n\n\n\n\n14.7.3 스포트 벡터 머신(support vector machine)\n스포트 벡터 머신 알고리즘을 적용한다.\n\nsc_svm &lt;- superClass(\n  lsat, \n  trainData = train, \n  responseCol = \"class\",\n  model = \"svmRadial\", \n  tuneLength = 1, \n  trainPartition = 0.7)\n\nsc_svm$modelFit\n\n[[1]]\n  TrainAccuracy TrainKappa    method\n1     0.9991416   0.998611 svmRadial\n\n[[2]]\nCross-Validated (5 fold) Confusion Matrix \n\n(entries are average cell counts across resamples)\n \n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared      107.8        0.0    0.2   0.0\n  fallen_dry     0.0       14.6    0.0   0.0\n  forest         0.2        0.0  249.6   0.0\n  water          0.0        0.0    0.0  94.0\n                            \n Accuracy (average) : 0.9991\n\nsc_svm$validation$performance\n\nConfusion Matrix and Statistics\n\n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared        392          2      0     0\n  fallen_dry       0         49      0     0\n  forest           2          0    437     0\n  water            0          0      0   130\n\nOverall Statistics\n                                          \n               Accuracy : 0.996           \n                 95% CI : (0.9899, 0.9989)\n    No Information Rate : 0.4318          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.9938          \n                                          \n Mcnemar's Test P-Value : NA              \n\nStatistics by Class:\n\n                     Class: cleared Class: fallen_dry Class: forest\nSensitivity                  0.9949           0.96078        1.0000\nSpecificity                  0.9968           1.00000        0.9965\nPos Pred Value               0.9949           1.00000        0.9954\nNeg Pred Value               0.9968           0.99792        1.0000\nPrevalence                   0.3893           0.05040        0.4318\nDetection Rate               0.3874           0.04842        0.4318\nDetection Prevalence         0.3893           0.04842        0.4338\nBalanced Accuracy            0.9958           0.98039        0.9983\n                     Class: water\nSensitivity                1.0000\nSpecificity                1.0000\nPos Pred Value             1.0000\nNeg Pred Value             1.0000\nPrevalence                 0.1285\nDetection Rate             0.1285\nDetection Prevalence       0.1285\nBalanced Accuracy          1.0000\n\n\n결과를 지도로 나타낸다.\n\nr &lt;- as.factor(sc_svm$map)\nlevels(r) &lt;- data.frame(ID = 1:4, class_supervised = levels(train$class))\n\ntm_shape(r) + tm_raster(\n  palette = c(\"yellow\", \"sandybrown\", \"darkgreen\", \"blue\"),\n  title = \"Classes\") +\n  tm_layout(\n    legend.outside = TRUE, \n    title = \"AI-based Classification: \\n Random Forest\")\n\n\n\n\n\n\n\n\n14.7.4 인공신경망(artificial neural network, ANN)\n인공신경망 알고리즘을 적용한다.\n\nsc_ann &lt;- superClass(\n  lsat, \n  trainData = train, \n  responseCol = \"class\",\n  model = \"nnet\", \n  tuneLength = 3, \n  trainPartition = 0.7,\n  verbose = FALSE,\n  trace = FALSE)\n\nsc_ann$modelFit\n\n[[1]]\n  TrainAccuracy TrainKappa method\n1     0.9953569  0.9927041   nnet\n\n[[2]]\nCross-Validated (5 fold) Confusion Matrix \n\n(entries are average cell counts across resamples)\n \n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared      128.6        0.2    0.6   0.0\n  fallen_dry     0.0       15.2    0.4   0.0\n  forest         0.6        0.0  236.0   0.0\n  water          0.0        0.2    0.2  92.2\n                            \n Accuracy (average) : 0.9954\n\nsc_ann$validation$performance\n\nConfusion Matrix and Statistics\n\n            Reference\nPrediction   cleared fallen_dry forest water\n  cleared        222          0      0     0\n  fallen_dry       0         46     18     0\n  forest          66          0    720     0\n  water            0          0      0   139\n\nOverall Statistics\n                                          \n               Accuracy : 0.9306          \n                 95% CI : (0.9148, 0.9443)\n    No Information Rate : 0.6094          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.8729          \n                                          \n Mcnemar's Test P-Value : NA              \n\nStatistics by Class:\n\n                     Class: cleared Class: fallen_dry Class: forest\nSensitivity                  0.7708           1.00000        0.9756\nSpecificity                  1.0000           0.98455        0.8605\nPos Pred Value               1.0000           0.71875        0.9160\nNeg Pred Value               0.9333           1.00000        0.9576\nPrevalence                   0.2378           0.03799        0.6094\nDetection Rate               0.1833           0.03799        0.5945\nDetection Prevalence         0.1833           0.05285        0.6491\nBalanced Accuracy            0.8854           0.99227        0.9180\n                     Class: water\nSensitivity                1.0000\nSpecificity                1.0000\nPos Pred Value             1.0000\nNeg Pred Value             1.0000\nPrevalence                 0.1148\nDetection Rate             0.1148\nDetection Prevalence       0.1148\nBalanced Accuracy          1.0000\n\n\n결과를 지도로 나타낸다.\n\nr &lt;- as.factor(sc_ann$map)\nlevels(r) &lt;- data.frame(ID = 1:4, class_supervised = levels(train$class))\n\ntm_shape(r) + tm_raster(\n  palette = c(\"yellow\", \"sandybrown\", \"darkgreen\", \"blue\"),\n  title = \"Classes\") +\n  tm_layout(\n    legend.outside = TRUE, \n    title = \"AI-based Classification: \\n ANN\")\n\n\n\n\n\n\n\n\n14.7.5 합성곱신경망(convolution neural network, CNN)",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>영상 분류</span>"
    ]
  },
  {
    "objectID": "4_4_change_detection.html",
    "href": "4_4_change_detection.html",
    "title": "\n15  변화 탐지\n",
    "section": "",
    "text": "15.1 개요\n필수적인 패키지를 불러온다.\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(tmap)\nlibrary(RStoolbox)\nlibrary(RColorBrewer)\n서울의 행정구역 바운더리 파일을 불러온다.\nseoul &lt;- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\")\nseoul_gu &lt;- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\")\nseoul_dong &lt;- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp\")\n2024년에 촬영된 Landsat 영상과 1983년에 촬영된 Landsat 영상을 비교하고자 한다. 2024년 데이터를 불러와 마스킹한다.\nlevel2_landsat_seoul_st &lt;- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/level2_landsat_seoul_stack.tif\")\nseoul_2024 &lt;- level2_landsat_seoul_st |&gt; \n  mask(seoul)\n1994년 데이터를 불러와 마스킹한다.\nlevel2_landsat_seoul_st_1994 &lt;- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/level2_landsat_seoul_stack_1994.tif\")\nseoul_1994 &lt;- level2_landsat_seoul_st_1994 |&gt; \n  mask(seoul)\n1994년 데이터를 2024년에 맞게 조정한다. 미묘하게 다른 extent와 resolution을 일치시킨다.\nseoul_1994 &lt;- resample(seoul_1994, seoul_2024, method = \"bilinear\")",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>변화 탐지</span>"
    ]
  },
  {
    "objectID": "4_4_change_detection.html#영상-대수를-활용한-변화-유무-탐지",
    "href": "4_4_change_detection.html#영상-대수를-활용한-변화-유무-탐지",
    "title": "\n15  변화 탐지\n",
    "section": "\n15.2 영상 대수를 활용한 변화 유무 탐지",
    "text": "15.2 영상 대수를 활용한 변화 유무 탐지\nNDVI를 비교하고자 한다. 2024년의 NDVI를 계산한다.\n\nNDVI_2024 &lt;- (seoul_2024$`B5(NIR)` - seoul_2024$`B4(Red)`) / (seoul_2024$`B5(NIR)` + seoul_2024$`B4(Red)`)\nnames(NDVI_2024) &lt;- \"NDVI\"\nggR(NDVI_2024)\n\n\n\n\n\n\n\n1994년의 NDVI를 계산한다.\n\nNDVI_1994 &lt;- (seoul_1994$`B4(Nir)` - seoul_1994$`B3(Red)`) / ((seoul_1994$`B4(Nir)` + seoul_1994$`B3(Red)`))\nnames(NDVI_1994) &lt;- \"NDVI\"\nqtm(NDVI_1994)\n\n\n\n\n\n\n\n둘 사이의 영상 일치도를 높이기 위해 ’영상대영상 대조 매칭(image to image contrast matching)’을 실시한다. RSToolbox 패키지의 histMatch() 함수를 활용한다.\n\nNDVI_1994_new &lt;- histMatch(NDVI_1994, NDVI_2024)\nqtm(NDVI_1994_new)\n\n\n\n\n\n\n\n2024년의 NDVI에 대한 지도를 제작한다.\n\nmy_palette &lt;- colorRampPalette(brewer.pal(11, \"RdYlGn\"))(100)\nmy_map &lt;- tm_shape(NDVI_2024, raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = my_palette, title = \"NDVI\", midpoint = 0) +\n  tm_shape(seoul) + tm_borders(lwd = 2, col = \"gray20\") +\n  tm_legend(legend.position = c(0.85, 0.06)) +\n  tm_layout(frame = TRUE, title = \"NDVI (2024)\", title.size = 2, \n            title.position = c(\"left\", \"top\"), bg.color = \"white\", \n            inner.margins = c(0.05, 0.05, 0.05, 0.05)) +\n  tm_scale_bar(color.dark = \"gray60\", position = c(0.01, 0.01), size = 0.6, breaks = seq(0, 20, 5)) + \n  tm_credits(\"SANG-IL LEE, Geography Education at SNU, 2025\", size = 0.7)\nmy_map\n\n\n\n\n\n\n\n1994년의 NDVI에 대한 지도를 제작한다.\n\nmy_palette &lt;- colorRampPalette(brewer.pal(11, \"RdYlGn\"))(100)\nmy_map &lt;- tm_shape(NDVI_1994_new, raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = my_palette, title = \"NDVI\", midpoint = 0) +\n  tm_shape(seoul) + tm_borders(lwd = 2, col = \"gray20\") +\n  tm_legend(legend.position = c(0.85, 0.06)) +\n  tm_layout(frame = TRUE, title = \"NDVI (1994)\", title.size = 2, \n            title.position = c(\"left\", \"top\"), bg.color = \"white\", \n            inner.margins = c(0.05, 0.05, 0.05, 0.05)) +\n  tm_scale_bar(color.dark = \"gray60\", position = c(0.01, 0.01), size = 0.6, breaks = seq(0, 20, 5)) + \n  tm_credits(\"SANG-IL LEE, Geography Education at SNU, 2025\", size = 0.7)\nmy_map\n\n\n\n\n\n\n\n차분을 이용해 변화를 탐지한다.\n\nNDVI_diff &lt;- NDVI_2024 - NDVI_1994_new\nqtm(NDVI_diff)\n\n\n\n\n\n\n\n표준편차를 계산한다.\n\nglobal(NDVI_diff, fun = sd, na.rm = TRUE) |&gt; round(digits = 1)\n\n      sd\nNDVI 0.1\n\n\n0.1을 임계값으로 하여 범주를 구분한다.\n\nNDVI_diff_cat &lt;- classify(\n  NDVI_diff, matrix(c(-Inf, -0.1, 1, -1, 0.1, 2, 0.1, Inf, 3), ncol = 3, byrow = TRUE))\nNDVI_diff_cat &lt;- as.factor(NDVI_diff_cat)\nqtm(NDVI_diff_cat)\n\n\n\n\n\n\n\n지도를 제작한다.\n\nmy_map &lt;- tm_shape(NDVI_diff_cat, raster.downsample = FALSE) + \n  tm_raster(style = \"cat\", \n            palette = c(\"red\", \"gray80\", \"darkgreen\"), title = \"Categories\", labels = c(\"Loss\", \"No Change\", \"Gain\")) +\n  tm_shape(seoul) + tm_borders(col = \"black\", lwd = 2) +\n  tm_legend(legend.position = c(0.87, 0.05), \n            legend.bg.color = \"white\", legend.bg.alpha = 0.6, \n            legend.title.size = 1.5, legend.text.size = 1.2) +\n  tm_layout(inner.margins = c(0.05, 0.04, 0.06, 0.04), \n            title = \"Change Detection: Vegetation\", title.size = 2,\n            title.position = c(0.02, 0.97)) + \n  tm_scale_bar(breaks = seq(0, 20, 5), text.size = 0.6, \n               color.dark = \"gray60\", position = c(0.03, 0.01)) +\n  tm_credits(text = \"SANG-IL LEE, Geography Education at SNU, 2025\",\n             size = 0.8, position = c(0.76, 0.01))\nmy_map",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>변화 탐지</span>"
    ]
  },
  {
    "objectID": "4_4_change_detection.html#다중-시기-조합-영상-변화-탐지",
    "href": "4_4_change_detection.html#다중-시기-조합-영상-변화-탐지",
    "title": "\n15  변화 탐지\n",
    "section": "\n15.3 다중 시기 조합 영상 변화 탐지",
    "text": "15.3 다중 시기 조합 영상 변화 탐지\nPCA 조합 영상을 통해 변화 탐지를 한다. 두 시기의 Landsat으로 부터 Blue, Green, Red, NIR 밴드를 추출하고, 그것에 PCA을 적용하는 기법을 사용한다.\n\nchange_detect_PCA &lt;- c(\n  seoul_2024[[c(\"B2(Blue)\", \"B3(Green)\", \"B4(Red)\", \"B5(NIR)\")]], \n  seoul_1994[[c(\"B1(Blue)\", \"B2(Green)\", \"B3(Red)\", \"B4(Nir)\")]]\n)\n\nPCA를 적용한다.\n\nPCA_res &lt;- rasterPCA(\n  change_detect_PCA,\n  spca = TRUE\n)\nPCA_map &lt;- PCA_res$map |&gt; stretch(minv = 0, maxv = 255, minq = 0.05, maxq = 0.95)\n\nPCA 결과를 살펴본다.\n\nsnu_PCA_res_recal &lt;- function(PCA_RES){\n  res &lt;- PCA_RES\n  n &lt;- length(res$model$center)\n  recal &lt;- bind_rows(as_tibble(res$model$loadings[1:n,]), as_tibble(t(res$model$sdev)))\n  recal &lt;- recal |&gt; mutate(\n    band_id = c(str_c(\"B\", 1:(n() - 1)), \"Eigen\"), .before = 1\n    ) \n  recal[1:n, 2:(n+1)] &lt;- recal[1:n, 2:(n+1)] * recal[(n+1), 2:(n+1)][rep(1, n), ]\n  recal[(n + 1), 2:(n+1)] &lt;- recal[(n + 1), 2:(n+1)]^2\n  recal[(n + 2), 2:(n+1)] &lt;- recal[(n + 1), 2:(n+1)]*100/n\n  recal[(n + 2), 1] &lt;- \"Pct\"\n  recal[(n + 3), 2:(n+1)] &lt;- t(cumsum(as.numeric(recal[(n + 2), 2:(n+1)])))\n  recal[(n + 3), 1] &lt;- \"Cum_Pct\"\n  recal\n  }\n\nsnu_PCA_res_recal(PCA_res)\n\n# A tibble: 11 × 9\n   band_id Comp.1   Comp.2   Comp.3   Comp.4   Comp.5   Comp.6   Comp.7   Comp.8\n   &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 B1       0.894  0.147    0.392    0.0246   0.146    0.0531   1.22e-2  1.73e-2\n 2 B2       0.902  0.207    0.368    0.00339 -0.0414  -0.0146  -5.60e-2 -6.04e-2\n 3 B3       0.908  0.171    0.358    0.0342  -0.108   -0.0394   4.39e-2  4.34e-2\n 4 B4      -0.323  0.895    0.00334 -0.309    0.00160  0.00138  4.76e-4  5.97e-3\n 5 B5       0.917 -0.0596  -0.363   -0.0601   0.0677  -0.122    2.02e-2 -1.03e-2\n 6 B6       0.912  0.0241  -0.397   -0.0118  -0.0204   0.0333  -7.99e-2  4.24e-2\n 7 B7       0.915  0.00354 -0.383   -0.0447  -0.0400   0.0901   6.03e-2 -3.12e-2\n 8 B8      -0.170  0.914   -0.228    0.288    0.00962 -0.00841  5.19e-3 -4.76e-3\n 9 Eigen    5.08   1.73     0.905    0.186    0.0415   0.0289   1.57e-2  8.76e-3\n10 Pct     63.5   21.7     11.3      2.32     0.519    0.361    1.96e-1  1.09e-1\n11 Cum_Pct 63.5   85.2     96.5     98.8     99.3     99.7      9.99e+1  1   e+2\n\n\nPCA가 생성한 이미지를 검토한다. PC4가 식생의 변화를 가장 잘 보여주는 이미지로 판단된다.\n\nqtm(PCA_map[[\"PC4\"]])\n\n\n\n\n\n\n\n표준점수로 전환한다.\n\nPC4_norm &lt;- normImage(PCA_map[[\"PC4\"]])\n\n-1과 1을 임계값으로 하여 범주를 구분한다.\n\nPC4_diff_cat &lt;- classify(\n  PC4_norm, matrix(c(-Inf, -1.5, 1, -1.5, 1.5, 2, 1.5, Inf, 3), ncol = 3, byrow = TRUE))\nPC4_diff_cat &lt;- as.factor(PC4_diff_cat)\n# qtm(PC4_diff_cat)\n\n지도를 제작한다.\n\nmy_map &lt;- tm_shape(PC4_diff_cat, raster.downsample = FALSE) + \n  tm_raster(style = \"cat\", \n            palette = c(\"red\", \"gray80\", \"darkgreen\"), title = \"Categories\", labels = c(\"Negative\", \"No Change\", \"Positive\")) +\n  tm_shape(seoul) + tm_borders(col = \"black\", lwd = 2) +\n  tm_legend(legend.position = c(0.87, 0.05), \n            legend.bg.color = \"white\", legend.bg.alpha = 0.6, \n            legend.title.size = 1.5, legend.text.size = 1.2) +\n  tm_layout(inner.margins = c(0.05, 0.04, 0.06, 0.04), \n            title = \"Change Detection: PCA\", title.size = 2,\n            title.position = c(0.02, 0.97)) + \n  tm_scale_bar(breaks = seq(0, 20, 5), text.size = 0.6, \n               color.dark = \"gray60\", position = c(0.03, 0.01)) +\n  tm_credits(text = \"SANG-IL LEE, Geography Education at SNU, 2025\",\n             size = 0.8, position = c(0.76, 0.01))\nmy_map",
    "crumbs": [
      "RS 데이터의 분석 및 모델링",
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>변화 탐지</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Remote Sensing",
    "section": "",
    "text": "Preface\n이것은 RS 웹북이다.",
    "crumbs": [
      "Preface"
    ]
  }
]