{
  "hash": "48196cc5aecaa5d485279b8b2e2d3970",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"영상 탐색\"\nauthor: Sang-Il Lee\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nlightbox: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n## 개요\n\n필수적인 패키지를 설치한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(terra)\nlibrary(tidyterra)\nlibrary(sf)\nlibrary(tmap)\noptions(scipen = 999)\n```\n:::\n\n\n서울의 행정구역 바운더리 파일을 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseoul <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_SIDO_2023_2Q.shp\")\nseoul_gu <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_GU_2023_2Q.shp\")\nseoul_dong <- st_read(\"D:/My R/Korean Administrative Areas/행정구역 셰이프 파일/2 Original Cleaning/2023_2Q/SEOUL_EMD_2023_2Q.shp\")\n```\n:::\n\n\n### Level-1 데이터\n\nLevel-1 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel1_landsat_seoul_st <- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/level1_landsat_seoul_stack.tif\")\n```\n:::\n\n\nBase R의 `plot()` 함수를 이용하여 단순 플롯을 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(level1_landsat_seoul_st, col = grey(0:100/100)) # 어두움\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n`tmap` 패키지를 이용하여 모든 밴드의 지도를 한꺼 번에 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(level1_landsat_seoul_st, raster.downsample = FALSE) +\n  tm_raster(style = \"cont\", palette = \"-Greys\", title = \"DN\") +\n  tm_facets(ncol = 4, free.scales = FALSE) +\n  tm_layout(legend.show = FALSE, panel.label.size = 2, \n            attr.outside = T, attr.outside.position = \"bottom\") +\n  tm_credits(text = \"SANG-IL LEE, Geography Education at SNU, 2025\", size = 1.5, position = c(0.75, \"top\"))\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-5-1.png){width=9000}\n:::\n:::\n\n\nB4(Red)만 분리해낸다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel1_B4 <- level1_landsat_seoul_st |> select(`B4(Red)`)\n```\n:::\n\n\n`tmap` 패키지를 이용하여 B4(Red)에 대한 기본 지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(level1_B4, raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = \"-Greys\", title = \"DN\") +\n  tm_shape(seoul) + tm_borders(col = \"black\", lwd = 2) +\n  tm_legend(legend.position = c(0.87, 0.05), \n            legend.bg.color = \"white\", legend.bg.alpha = 0.6, \n            legend.title.size = 1.5, legend.text.size = 1.2) +\n  tm_layout(inner.margins = c(0.05, 0.04, 0.06, 0.04), \n            title = \"Level-1: B4\", title.size = 2,\n            title.position = c(0.02, 0.97)) + \n  tm_scale_bar(breaks = seq(0, 20, 5), text.size = 0.6, \n               color.dark = \"gray60\", position = c(0.03, 0.01)) +\n  tm_credits(text = \"SANG-IL LEE, Geography Education at SNU, 2025\",\n             size = 0.8, position = c(0.76, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-7-1.png){width=4500}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n### Level-2 데이터\n\nLevel-2 데이터를 불러온다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel2_landsat_seoul_st <- rast(\"D:/My R/World Data Manupulation/USGS EarthExplorer/level2_landsat_seoul_stack.tif\")\n```\n:::\n\n\nBase R의 `plot()` 함수를 이용하여 단순 플롯을 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(level2_landsat_seoul_st, col = grey(0:100/100)) # 어두움\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n`tmap` 패키지를 이용하여 모든 밴드의 지도를 한꺼 번에 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(level2_landsat_seoul_st, raster.downsample = FALSE) +\n  tm_raster(style = \"cont\", palette = \"-Greys\", title = \"DN\") +\n  tm_facets(ncol = 4, free.scales = FALSE) +\n  tm_layout(legend.show = FALSE, panel.label.size = 2, \n            attr.outside = T, attr.outside.position = \"bottom\") +\n  tm_credits(text = \"SANG-IL LEE, Geography Education at SNU, 2025\", size = 1.5, position = c(0.65, \"top\"))\nmy_map\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-11-1.png){width=4500}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\nB4(Red)만 분리해낸다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel2_B4 <- level2_landsat_seoul_st |> select(`B4(Red)`)\n```\n:::\n\n\n`tmap` 패키지를 이용하여 B4(Red)에 대한 기본 지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(level2_B4, raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = \"-Greys\", title = \"DN\") +\n  tm_shape(seoul) + tm_borders(col = \"black\", lwd = 2) +\n  tm_legend(legend.position = c(0.87, 0.05), \n            legend.bg.color = \"white\", legend.bg.alpha = 0.6, \n            legend.title.size = 1.5, legend.text.size = 1.2) +\n  tm_layout(inner.margins = c(0.05, 0.04, 0.06, 0.04), \n            title = \"Level-2: B4\", title.size = 2,\n            title.position = c(0.02, 0.97)) + \n  tm_scale_bar(breaks = seq(0, 20, 5), text.size = 0.6, \n               color.dark = \"gray60\", position = c(0.03, 0.01)) +\n  tm_credits(text = \"SANG-IL LEE, Geography Education at SNU, 2025\",\n             size = 0.8, position = c(0.76, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-14-1.png){width=4500}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## 개별 픽셀값의 확인\n\nLevel-2의 B4를 기준으로 기본적인 사항을 알아본다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel2_B4 \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 1011, 1235, 1  (nrow, ncol, nlyr)\nresolution  : 29.98619, 29.98619  (x, y)\nextent      : 935034.8, 972067.8, 1936673, 1966989  (xmin, xmax, ymin, ymax)\ncoord. ref. : +proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +units=m +no_defs \nsource      : level2_landsat_seoul_stack.tif \nname        :   B4(Red) \nmin value   :  5501.331 \nmax value   : 55165.191 \n```\n\n\n:::\n:::\n\n\n개별 파라미터 값을 다음과 같이 확인해 볼 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\next(level2_B4) # 범역\nres(level2_B4) # 공간 해상도\ndim(level2_B4) # 가로 세로 그리드 셀 수\nncell(level2_B4) # 총 그리드 셀 수\n```\n:::\n\n\n셀 일련번호와 셀위치 좌표계를 왕래할 수 있다. 다음과 같은 방식으로 가능하다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrowFromCell(level2_B4, 10000)\ncolFromCell(level2_B4, 10000)\ncellFromRowCol(level2_B4, 9, 120)\nxyFromCell(level2_B4, 10000)\ncellFromXY(level2_B4, cbind(938618.2, 1966734))\ncolFromX(level2_B4, 938618.2)\nrowFromY(level2_B4, 1966734)\n```\n:::\n\n\n[`extract()`](https://rspatial.github.io/terra/reference/extract.html) 함수를 이용하면 셀 값을 얻을 수 있다. 가장 단순한 방법은 셀 일련번호를 아는 경우이다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel2_B4 |> extract(10000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  B4(Red)\n1 9203.76\n```\n\n\n:::\n:::\n\n\n그리드 좌표를 아는 경우는 다음과 같이 구할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel2_B4 |> extract(cbind(938618.2, 1966734))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  B4(Red)\n1 9203.76\n```\n\n\n:::\n:::\n\n\n셀위치 좌표를 아는 경우 막바로 구할 수 없고, 먼저 셀 일련번호로 전환한 후 구할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncell_num <- cellFromRowCol(level2_B4, 9, 120)\nlevel2_B4 |> extract(cell_num)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  B4(Red)\n1 9203.76\n```\n\n\n:::\n:::\n\n\n내 연구실의 DN를 확인하고자 한다. 우선 경위도 좌표를 평면직각좌표로 전환한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoints_sf <- tibble(lon = 126.955184, lat = 37.460422) |> \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) |> \n  st_transform(crs = 5179) \nst_coordinates(points_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            X       Y\n[1,] 951818.1 1940275\n```\n\n\n:::\n:::\n\n\n내 연구실의 DN를 산출한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel1_landsat_seoul_st |> extract(st_coordinates(points_sf))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  B1(Coastal) B2(Blue) B3(Green)  B4(Red)  B5(NIR) B6(SWIR1) B7(SWIR2)  B8(Pan)\n1    10767.71 10031.55  9498.032 8875.714 13899.86  10924.32  8597.115 8918.473\n  B9(Cirrus) B10(TIR1) B11(TIR2)\n1   5051.092  29168.73     26395\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel2_landsat_seoul_st |> extract(st_coordinates(points_sf))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  B1(Coastal) B2(Blue) B3(Green)  B4(Red)  B5(NIR) B6(SWIR1) B7(SWIR2) B10(TIR)\n1    8817.386 9241.396   10244.1 10099.12 14927.95  12639.04  10703.09 47680.02\n```\n\n\n:::\n:::\n\n\n모든 밴드에 대한 값을 동시에 얻고 싶으면 다음과 같이 하면 된다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel2_landsat_seoul_st |> extract(st_coordinates(points_sf))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  B1(Coastal) B2(Blue) B3(Green)  B4(Red)  B5(NIR) B6(SWIR1) B7(SWIR2) B10(TIR)\n1    8817.386 9241.396   10244.1 10099.12 14927.95  12639.04  10703.09 47680.02\n```\n\n\n:::\n:::\n\n\n## 영상 통계 및 그래프\n\n### 단변량\n\n우선, 서울시 내부 영역만 마스킹하도록 한다. 우선 Level-1에 적용한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel1_landsat_seoul_st_mask <- level1_landsat_seoul_st |> \n  mask(seoul)\n```\n:::\n\n\n기본 플롯을 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(level1_landsat_seoul_st_mask, col = grey(0:100/100))\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\nLevel-2에 적용한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevel2_landsat_seoul_st_mask <- level2_landsat_seoul_st |> \n  mask(seoul)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(level2_landsat_seoul_st_mask, col = grey(0:100/100))\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\nLevel-1에 대한 요약 통계량을 계산한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal(level1_landsat_seoul_st_mask, fun = max, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                max\nB1(Coastal) 62841.0\nB2(Blue)    60080.5\nB3(Green)   56189.0\nB4(Red)     53997.0\nB5(NIR)     57576.8\nB6(SWIR1)   64498.3\nB7(SWIR2)   64393.9\nB8(Pan)     46289.8\nB9(Cirrus)   5092.0\nB10(TIR1)   33979.5\nB11(TIR2)   29307.2\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level1_landsat_seoul_st_mask, fun = min, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                min\nB1(Coastal)  8945.5\nB2(Blue)     8013.3\nB3(Green)    6780.8\nB4(Red)      6059.0\nB5(NIR)      5170.4\nB6(SWIR1)    4999.7\nB7(SWIR2)    5051.0\nB8(Pan)      6556.2\nB9(Cirrus)   4992.0\nB10(TIR1)   25730.2\nB11(TIR2)   23961.5\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level1_landsat_seoul_st_mask, fun = mean, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               mean\nB1(Coastal) 10625.5\nB2(Blue)     9825.4\nB3(Green)    9165.2\nB4(Red)      8558.9\nB5(NIR)     14120.2\nB6(SWIR1)   11174.9\nB7(SWIR2)    8655.2\nB8(Pan)      8889.6\nB9(Cirrus)   5039.0\nB10(TIR1)   29481.5\nB11(TIR2)   26479.0\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level1_landsat_seoul_st_mask, fun = range, na.rm = TRUE) |> \n  mutate(range = X2 - X1) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 X1      X2   range\nB1(Coastal)  8945.5 62841.0 53895.5\nB2(Blue)     8013.3 60080.5 52067.2\nB3(Green)    6780.8 56189.0 49408.2\nB4(Red)      6059.0 53997.0 47938.0\nB5(NIR)      5170.4 57576.8 52406.4\nB6(SWIR1)    4999.7 64498.3 59498.6\nB7(SWIR2)    5051.0 64393.9 59342.9\nB8(Pan)      6556.2 46289.8 39733.6\nB9(Cirrus)   4992.0  5092.0   100.0\nB10(TIR1)   25730.2 33979.5  8249.3\nB11(TIR2)   23961.5 29307.2  5345.8\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level1_landsat_seoul_st_mask, fun = var, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            B1.Coastal.\nB1(Coastal)   1039196.1\nB2(Blue)      1443526.5\nB3(Green)     1809559.9\nB4(Red)       2851827.9\nB5(NIR)      12036516.4\nB6(SWIR1)     4570732.0\nB7(SWIR2)     3230931.2\nB8(Pan)       2132491.8\nB9(Cirrus)         51.3\nB10(TIR1)     1197140.2\nB11(TIR2)      508079.5\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level1_landsat_seoul_st_mask, fun = sd, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                sd\nB1(Coastal) 1019.4\nB2(Blue)    1201.5\nB3(Green)   1345.2\nB4(Red)     1688.7\nB5(NIR)     3469.4\nB6(SWIR1)   2137.9\nB7(SWIR2)   1797.5\nB8(Pan)     1460.3\nB9(Cirrus)     7.2\nB10(TIR1)   1094.1\nB11(TIR2)    712.8\n```\n\n\n:::\n:::\n\n\nLevel-2에 대한 요약 통계량을 계산한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal(level2_landsat_seoul_st_mask, fun = max, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                max\nB1(Coastal) 54015.0\nB2(Blue)    52998.4\nB3(Green)   52998.0\nB4(Red)     50929.4\nB5(NIR)     52635.7\nB6(SWIR1)   61182.5\nB7(SWIR2)   63939.2\nB10(TIR)    52974.8\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level2_landsat_seoul_st_mask, fun = min, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                min\nB1(Coastal)   763.2\nB2(Blue)     2967.4\nB3(Green)    6739.1\nB4(Red)      6490.8\nB5(NIR)      6636.6\nB6(SWIR1)    7208.4\nB7(SWIR2)    7301.8\nB10(TIR)    43559.1\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level2_landsat_seoul_st_mask, fun = mean, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               mean\nB1(Coastal)  8810.0\nB2(Blue)     9122.6\nB3(Green)    9941.3\nB4(Red)      9822.9\nB5(NIR)     15113.3\nB6(SWIR1)   12869.9\nB7(SWIR2)   10760.5\nB10(TIR)    47923.3\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level2_landsat_seoul_st_mask, fun = range, na.rm = TRUE) |> \n  mutate(range = X2 - X1) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 X1      X2   range\nB1(Coastal)   763.2 54015.0 53251.8\nB2(Blue)     2967.4 52998.4 50031.0\nB3(Green)    6739.1 52998.0 46258.9\nB4(Red)      6490.8 50929.4 44438.6\nB5(NIR)      6636.6 52635.7 45999.1\nB6(SWIR1)    7208.4 61182.5 53974.1\nB7(SWIR2)    7301.8 63939.2 56637.4\nB10(TIR)    43559.1 52974.8  9415.7\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level2_landsat_seoul_st_mask, fun = var, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            B1.Coastal.\nB1(Coastal)    957254.6\nB2(Blue)      1318686.7\nB3(Green)     1784782.2\nB4(Red)       2579442.4\nB5(NIR)       9784352.7\nB6(SWIR1)     3815727.0\nB7(SWIR2)     2969408.9\nB10(TIR)      1876167.3\n```\n\n\n:::\n\n```{.r .cell-code}\nglobal(level2_landsat_seoul_st_mask, fun = sd, na.rm = TRUE) |> round(digits = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                sd\nB1(Coastal)  978.4\nB2(Blue)    1148.3\nB3(Green)   1336.0\nB4(Red)     1606.1\nB5(NIR)     3128.0\nB6(SWIR1)   1953.4\nB7(SWIR2)   1723.2\nB10(TIR)    1369.7\n```\n\n\n:::\n:::\n\n\nLevel-1에 대한 히스토그램을 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(level1_landsat_seoul_st_mask, breaks = 100)\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nLevel-2에 대한 히스토그램을 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(level2_landsat_seoul_st_mask, breaks = 100)\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n`ggplot`으로 Level-1에 대한 히스토그램을 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_1 <- as.data.frame(level1_landsat_seoul_st_mask, xy = FALSE, na.rm = TRUE)\ndf_long <- df_1 |> \n  pivot_longer(\n    cols = everything(), names_to = \"band\", values_to = \"DN\"\n  ) |> \n  mutate(\n    band = fct(band, levels = unique(band))\n  )\nggplot(df_long, aes(x = DN)) +\n  geom_histogram(bins = 100) +\n  facet_wrap(~ band, scales = \"free_y\") +\n  theme(\n    plot.title = element_text(size = 30), \n    axis.title = element_text(size = 20),\n    axis.text.x = element_text(size = 16), \n    axis.text.y = element_text(size = 16),\n    legend.title = element_text(size = 17), \n    legend.text = element_text(size = 16),\n    strip.text = element_text(size = 20)\n  ) +\n  labs(\n    x = \"DN\", \n    y = \"Frequencies\", \n    caption =\"SANG-IL LEE, Geography Education at SNU, 2025\") \n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-34-1.png){width=11640}\n:::\n:::\n\n\n`ggplot`으로 Level-2에 대한 히스토그램을 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_2 <- as.data.frame(level2_landsat_seoul_st_mask, xy = FALSE, na.rm = TRUE)\ndf_long <- df_2 |> \n  pivot_longer(\n    cols = everything(), names_to = \"band\", values_to = \"DN\"\n  ) |> \n  mutate(\n    band = fct(band, levels = unique(band))\n  )\nggplot(df_long, aes(x = DN)) +\n  geom_histogram(bins = 100) +\n  facet_wrap(~ band, scales = \"free_y\") +\n  theme(\n    plot.title = element_text(size = 30), \n    axis.title = element_text(size = 20),\n    axis.text.x = element_text(size = 16), \n    axis.text.y = element_text(size = 16),\n    legend.title = element_text(size = 17), \n    legend.text = element_text(size = 16),\n    strip.text = element_text(size = 20)\n  ) +\n  labs(\n    x = \"DN\", \n    y = \"Frequencies\", \n    caption =\"SANG-IL LEE, Geography Education at SNU, 2025\") \n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-35-1.png){width=11640}\n:::\n:::\n\n\n### 다변량\n\nLevel-1에 대한 밴드간 Pearson's r을 계산한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor_matrix_1 <- cor(df_1, use = \"complete.obs\", method = \"pearson\")\ncor_matrix_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            B1(Coastal)    B2(Blue)   B3(Green)     B4(Red)     B5(NIR)\nB1(Coastal)  1.00000000  0.99798739  0.96786426  0.95718076 -0.25897301\nB2(Blue)     0.99798739  1.00000000  0.97507376  0.96432296 -0.25464801\nB3(Green)    0.96786426  0.97507376  1.00000000  0.98707290 -0.15120982\nB4(Red)      0.95718076  0.96432296  0.98707290  1.00000000 -0.18082622\nB5(NIR)     -0.25897301 -0.25464801 -0.15120982 -0.18082622  1.00000000\nB6(SWIR1)    0.56027553  0.57575476  0.66445025  0.64813007  0.51626370\nB7(SWIR2)    0.81437027  0.82812993  0.87725273  0.88101123  0.10640364\nB8(Pan)      0.96743285  0.97527993  0.99141271  0.99191802 -0.17705143\nB9(Cirrus)  -0.04015354 -0.04008422 -0.03278075 -0.03357331  0.08783554\nB10(TIR1)    0.76315089  0.76279463  0.73760964  0.74309701 -0.28209793\nB11(TIR2)    0.75765298  0.75724889  0.73228394  0.73882537 -0.27484898\n             B6(SWIR1)   B7(SWIR2)     B8(Pan)  B9(Cirrus)   B10(TIR1)\nB1(Coastal) 0.56027553  0.81437027  0.96743285 -0.04015354  0.76315089\nB2(Blue)    0.57575476  0.82812993  0.97527993 -0.04008422  0.76279463\nB3(Green)   0.66445025  0.87725273  0.99141271 -0.03278075  0.73760964\nB4(Red)     0.64813007  0.88101123  0.99191802 -0.03357331  0.74309701\nB5(NIR)     0.51626370  0.10640364 -0.17705143  0.08783554 -0.28209793\nB6(SWIR1)   1.00000000  0.88139157  0.65063744  0.04154446  0.47235755\nB7(SWIR2)   0.88139157  1.00000000  0.87666763 -0.00113004  0.68909026\nB8(Pan)     0.65063744  0.87666763  1.00000000 -0.03386927  0.74842166\nB9(Cirrus)  0.04154446 -0.00113004 -0.03386927  1.00000000 -0.02366797\nB10(TIR1)   0.47235755  0.68909026  0.74842166 -0.02366797  1.00000000\nB11(TIR2)   0.47280457  0.68643512  0.74350016 -0.01506218  0.99582716\n              B11(TIR2)\nB1(Coastal)  0.75765298\nB2(Blue)     0.75724889\nB3(Green)    0.73228394\nB4(Red)      0.73882537\nB5(NIR)     -0.27484898\nB6(SWIR1)    0.47280457\nB7(SWIR2)    0.68643512\nB8(Pan)      0.74350016\nB9(Cirrus)  -0.01506218\nB10(TIR1)    0.99582716\nB11(TIR2)    1.00000000\n```\n\n\n:::\n:::\n\n\n상관관계 매트릭스 그래프를 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggcorrplot)\nggcorrplot(cor_matrix_1, hc.order = TRUE, tl.cex = 18, \n           lab = TRUE, lab_size = 6, outline.color = \"gray80\", \n           colors = c(\"#6D9EC1\", \"white\", \"#E46726\"), digits = 3) + \n  labs(caption = \"SANG-IL LEE, Geography Education at SNU, 2025\")\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-37-1.png){width=11640}\n:::\n:::\n\n\nLevel-2에 대한 밴드간 Pearson's r을 계산한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor_matrix_2 <- cor(df_2, use = \"complete.obs\", method = \"pearson\")\ncor_matrix_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            B1(Coastal)   B2(Blue)  B3(Green)    B4(Red)    B5(NIR) B6(SWIR1)\nB1(Coastal)   1.0000000  0.9889701  0.9489457  0.9366629 -0.1050725 0.6395818\nB2(Blue)      0.9889701  1.0000000  0.9725028  0.9615489 -0.1628024 0.6327087\nB3(Green)     0.9489457  0.9725028  1.0000000  0.9859232 -0.1062593 0.6912290\nB4(Red)       0.9366629  0.9615489  0.9859232  1.0000000 -0.1490324 0.6658327\nB5(NIR)      -0.1050725 -0.1628024 -0.1062593 -0.1490324  1.0000000 0.5186501\nB6(SWIR1)     0.6395818  0.6327087  0.6912290  0.6658327  0.5186501 1.0000000\nB7(SWIR2)     0.8398821  0.8553201  0.8891887  0.8891081  0.1072651 0.8805283\nB10(TIR)      0.6727512  0.7157254  0.7158112  0.7285352 -0.2516996 0.4879272\n            B7(SWIR2)   B10(TIR)\nB1(Coastal) 0.8398821  0.6727512\nB2(Blue)    0.8553201  0.7157254\nB3(Green)   0.8891887  0.7158112\nB4(Red)     0.8891081  0.7285352\nB5(NIR)     0.1072651 -0.2516996\nB6(SWIR1)   0.8805283  0.4879272\nB7(SWIR2)   1.0000000  0.6940104\nB10(TIR)    0.6940104  1.0000000\n```\n\n\n:::\n:::\n\n\n동일한 그래프를 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggcorrplot)\nggcorrplot(cor_matrix_2, hc.order = TRUE, tl.cex = 18, \n           lab = TRUE, lab_size = 6, outline.color = \"gray80\", \n           colors = c(\"#6D9EC1\", \"white\", \"#E46726\"), digits = 3) + \n  labs(caption = \"SANG-IL LEE, Geography Education at SNU, 2025\")\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-39-1.png){width=11640}\n:::\n:::\n\n\n두 밴드 간의 산포도(feature space plot)를 제작한다(Level-2).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_2, aes(x = `B4(Red)`, y = `B5(NIR)`)) +\n  geom_point(alpha = 0.3, color = \"darkblue\", size = 0.5) +\n  coord_fixed() +\n  theme_minimal() +\n    theme(\n    plot.title = element_text(size = 30), \n    axis.title = element_text(size = 20),\n    axis.text.x = element_text(size = 16), \n    axis.text.y = element_text(size = 16),\n    legend.title = element_text(size = 17), \n    legend.text = element_text(size = 16),\n    strip.text = element_text(size = 20)\n  ) +\n  labs(\n    x = \"Band 4 (Red)\", \n    y = \"Band 5 (NIR)\", \n    title = \"Feature Space: B4 vs B5\",\n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\")\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-40-1.png){width=11640}\n:::\n:::\n\n\n## 영상 프로파일링\n\n### 공간적(선형) 프로파일\n\n두 지점을 설정하여 라인을 생성하고, 라인 상에 일정한 간격의 포인트를 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 두 지점을 연결하는 라인 sf를 만든다.\nline_sf <- tibble(x = c(126.961091, 126.992310), y = c(37.442904, 37.660032)) |> \n  as.matrix() |> # st_linestring()은 매트릭스만 받음\n  st_linestring() |> \n  st_sfc(crs = 4326) |> \n  st_sf(geometry = _) |> # _ 표시는 직전에 만들어진 것을 인풋으로 받는다는 의미\n  st_transform(crs = 5179)\n\n# 라인 상에 적절한 간격의 포인트를 생성한다.\npoints_sf <- line_sf |> \n  st_line_sample(density = 0.1) |> # '단위 길이 당 포인트의 수'를 의미, 10m당 하나씩을 택한다는 의미.\n  st_cast(\"POINT\") |> \n  st_sf() \n```\n:::\n\n\n선을 지도에 표시한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(level2_landsat_seoul_st_mask$`B5(NIR)`, \n                   raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = \"-Greys\", title = \"DN\") +\n  tm_shape(line_sf) + tm_lines(col = \"red\", lwd = 2) +\n  tm_shape(seoul) + tm_borders(col = \"black\", lwd = 2) +\n  tm_legend(legend.position = c(0.87, 0.05), \n            legend.bg.color = \"white\", legend.bg.alpha = 0.6, \n            legend.title.size = 1.5, legend.text.size = 1.2) +\n  tm_layout(inner.margins = c(0.05, 0.04, 0.06, 0.04), \n            title = \"Level-2: B5 (NIR)\", title.size = 2,\n            title.position = c(0.02, 0.97)) + \n  tm_scale_bar(breaks = seq(0, 20, 5), text.size = 0.6, \n               color.dark = \"gray60\", position = c(0.03, 0.01)) +\n  tm_credits(text = \"SANG-IL LEE, Geography Education at SNU, 2025\",\n             size = 0.8, position = c(0.76, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-42-1.png){width=9000}\n:::\n:::\n\n\n공간(선형) 프로파일을 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 래스터로부터 각 포인트에 해당하는 값을 추출한다.\nprofile <- level2_landsat_seoul_st_mask$`B5(NIR)` |> \n  extract(points_sf) |> \n  mutate(\n    distance = ID * 10 / 1000, # 10m 당 하나이므로 10을 곱해 거리(m)로 만들고, 1,000으로 나누어 km 단위\n    .keep = \"unused\"\n  )\n\n# 시각화\nggplot(profile, aes(x = distance, y = `B5(NIR)`)) +\n  geom_line() +\n  # theme_minimal() +\n  theme(\n    plot.title = element_text(size = 30), \n    axis.title = element_text(size = 20),\n    axis.text.x = element_text(size = 16), \n    axis.text.y = element_text(size = 16),\n    legend.title = element_text(size = 17), \n    legend.text = element_text(size = 16),\n    strip.text = element_text(size = 20)\n  ) +\n  labs(\n    x = \"Distance (km)\", \n    y = \"DV\", \n    title = \"Spatial Profile\",\n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\"\n  )\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-43-1.png){width=11640}\n:::\n:::\n\n\n### 분광 프로파일\n\n서울시 4곳(관악산, 공항, 한강, 청와대)의 분광 프로파일을 추출하고자 한다. 우선 포인트 셰이프 파일을 생성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npoints_sf <- tibble(lon = c(126.956525, 126.800839, 126.976255, 126.974984), lat = c(37.451518, 37.567958, 37.510931, 37.585714)) |> \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326) |> \n  st_transform(crs = 5179) |> \n  mutate(ID = 1:4)\n```\n:::\n\n\n지도를 제작한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_map <- tm_shape(level2_landsat_seoul_st_mask$`B5(NIR)`, \n                   raster.downsample = FALSE) + \n  tm_raster(style = \"cont\", palette = \"-Greys\", \n            title = \"DN\", legend.show = FALSE) +\n  tm_shape(points_sf) + tm_text(\"ID\", col = \"red\", size = 2) +\n  tm_shape(seoul) + tm_borders(col = \"black\", lwd = 2) +\n  tm_layout(inner.margins = c(0.05, 0.04, 0.06, 0.04), \n            title = \"Level-2: B5 (NIR)\", title.size = 2,\n            title.position = c(0.02, 0.97)) + \n  tm_scale_bar(breaks = seq(0, 20, 5), text.size = 0.6, \n               color.dark = \"gray60\", position = c(0.03, 0.01)) +\n  tm_credits(text = \"SANG-IL LEE, Geography Education at SNU, 2025\",\n             size = 0.8, position = c(0.76, 0.01))\nmy_map\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-45-1.png){width=4500}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n4개 지점에 대해 Level-2의 DN를 추출하고 분광 프로파일을 완성한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspec_profile <- extract(level2_landsat_seoul_st_mask, points_sf) |> \n  as.data.frame() |> select(-`B10(TIR)`)\n\ndf_spec <- spec_profile |> \n  pivot_longer(\n    cols = `B1(Coastal)`:`B7(SWIR2)`,\n    names_to = \"band\",\n    values_to = \"DN\"\n  ) |> \n  mutate(\n    band = fct(band, levels = unique(band)),\n    ID = as_factor(ID)\n  )\n\nggplot(df_spec, aes(x = band, y = DN, group = ID, color = ID)) +\n  geom_line(linewidth = 1) +\n  geom_point(size = 2) +\n  # theme_minimal() +\n  scale_x_discrete(\n    labels = c(\"B1\\n(Aerosol)\", \"B2\\n(Blue)\", \"B3\\n(Green)\", \n               \"B4\\n(Red)\", \"B5\\n(NIR)\", \"B6\\n(SWIR1)\", \n               \"B7\\n(SWIR2)\")\n  ) +\n  scale_color_discrete(\n    name = \"Locations\", \n    labels = c(\"1\" = \"관악산\", \"2\" = \"공항\", \"3\" = \"한강\", \"4\" = \"청와대\")\n  ) +\n  theme(\n    plot.title = element_text(size = 30), \n    axis.title = element_text(size = 20),\n    axis.text.x = element_text(size = 16), \n    axis.text.y = element_text(size = 16),\n    legend.title = element_text(size = 17), \n    legend.text = element_text(size = 16),\n    strip.text = element_text(size = 20)\n  ) +\n  labs(\n    title = \"Spectral Profile\", \n    x = \"Band\", \n    y = \"DN\",\n    caption = \"SANG-IL LEE, Geography Education at SNU, 2025\"\n  )\n```\n\n::: {.cell-output-display}\n![](3_3_image_exploration_files/figure-html/unnamed-chunk-47-1.png){width=11640}\n:::\n:::\n",
    "supporting": [
      "3_3_image_exploration_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}